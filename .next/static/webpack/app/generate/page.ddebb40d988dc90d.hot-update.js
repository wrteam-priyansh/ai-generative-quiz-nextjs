"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/generate/page",{

/***/ "(app-pages-browser)/./src/services/authService.ts":
/*!*************************************!*\
  !*** ./src/services/authService.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authService: () => (/* binding */ authService)\n/* harmony export */ });\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ \"(app-pages-browser)/./src/services/api.ts\");\n\nconst authService = {\n    // Get Google OAuth authorization URL\n    getGoogleAuthUrl: async (state)=>{\n        // Use current origin for the state to redirect back after auth\n        const redirectState = state || window.location.origin + '/auth/callback';\n        const params = {\n            state: redirectState\n        };\n        const response = await _api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get('/auth/google/authorize', {\n            params\n        });\n        return response.data;\n    },\n    // Refresh access token\n    refreshToken: async (refreshToken)=>{\n        const response = await _api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post('/auth/refresh', null, {\n            params: {\n                refresh_token: refreshToken\n            }\n        });\n        return response.data;\n    },\n    // Validate Google credentials\n    validateCredentials: async (credentialsJson)=>{\n        const response = await _api__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post('/auth/validate', null, {\n            params: {\n                credentials_json: credentialsJson\n            }\n        });\n        return response.data;\n    },\n    // Store credentials in localStorage\n    storeCredentials: (data)=>{\n        console.log('Storing credentials with data:', data);\n        localStorage.setItem('google_access_token', data.access_token);\n        localStorage.setItem('google_refresh_token', data.refresh_token);\n        localStorage.setItem('google_credentials_json', data.credentials_json);\n        localStorage.setItem('user_info', JSON.stringify(data.user_info));\n        // Calculate expiry time from expires_in (seconds)\n        const expiryTime = Date.now() + data.expires_in * 1000;\n        localStorage.setItem('token_expires_at', expiryTime.toString());\n        console.log('Stored tokens:', {\n            access_token: !!localStorage.getItem('google_access_token'),\n            refresh_token: !!localStorage.getItem('google_refresh_token'),\n            expires_at: localStorage.getItem('token_expires_at'),\n            current_time: Date.now()\n        });\n    },\n    // Get stored credentials\n    getStoredCredentials: ()=>{\n        return {\n            access_token: localStorage.getItem('google_access_token'),\n            refresh_token: localStorage.getItem('google_refresh_token'),\n            credentials_json: localStorage.getItem('google_credentials_json'),\n            user_info: localStorage.getItem('user_info') ? JSON.parse(localStorage.getItem('user_info')) : null,\n            token_expires_at: localStorage.getItem('token_expires_at')\n        };\n    },\n    // Clear stored credentials\n    clearCredentials: ()=>{\n        localStorage.removeItem('google_access_token');\n        localStorage.removeItem('google_refresh_token');\n        localStorage.removeItem('google_credentials_json');\n        localStorage.removeItem('user_info');\n        localStorage.removeItem('token_expires_at');\n    },\n    // Check if user is authenticated\n    isAuthenticated: ()=>{\n        const { access_token, token_expires_at } = authService.getStoredCredentials();\n        console.log('isAuthenticated check:', {\n            access_token: !!access_token,\n            token_expires_at,\n            currentTime: Date.now()\n        });\n        if (!access_token) return false;\n        // If no expiry time, consider it valid (some OAuth flows don't provide expiry)\n        if (!token_expires_at) return true;\n        return Date.now() < parseInt(token_expires_at);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/authService.ts\n"));

/***/ })

});